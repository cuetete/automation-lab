// DESCRIPTION:
//
//		DA converter output DACA,DACB,DACC,DACD 
//		Check whether the value A:0.4 B:0.8 C:1.2 D:1.6 is right
//		
////###########################################################################	

#include "DSP2833x_Device.h"     // DSP2833x Headerfile Include File
#include "DSP2833x_Examples.h"   // DSP2833x Examples Include File

#define SetLOAD GpioDataRegs.GPBDAT.bit.GPIO49=1;	//Set TLV5620-LOAD high
#define ClrLOAD GpioDataRegs.GPBDAT.bit.GPIO49=0;	//Set TLV5620-LOAD low

void WriteDAC(unsigned char add,unsigned char rng,unsigned char vol);
void delay(unsigned int t);
void spi_xmit(Uint16 a);
void spi_fifo_init(void);
void spi_init(void);


void main(void)
{   
	int temp;   
	InitSysCtrl();
	InitSpiaGpio();

	
	EALLOW;
	GpioCtrlRegs.GPBMUX2.bit.GPIO49 = 0;     // set GPIO49 as GPIO
	GpioCtrlRegs.GPBDIR.bit.GPIO49 = 1;      // set as output
	GpioCtrlRegs.GPBPUD.bit.GPIO49 = 0;      // disable PULLUP
	EDIS;
	
	DINT;
	IER = 0x0000;
	IFR = 0x0000;
	InitPieCtrl();
	InitPieVectTable();	
    spi_init();
	EINT;   	// Enable Global interrupt INTM
	ERTM;		// Enable Global realtime interrupt DBGM
    SetLOAD;
            
    temp=47;//REF=2.2V;VO(DACA|B|C|D) =REF* CODE/256
 
    while(1)
    {
	        
	        WriteDAC(0,0,temp);		//0.4V
	   
	        WriteDAC(1,0,temp*2);	//0.8V

	        WriteDAC(2,0,temp*3);	//1.2V

	        WriteDAC(3,0,temp*4);	//1.6V

	        delay(1500);	//在此设断点,用万用表直接测量四路DA的输出电压值，注意实际测量值有误差大概0.1V左右
	}

} 	

	
void WriteDAC(unsigned char add,unsigned char rng,unsigned char vol)
{   
	unsigned short int data;
    data=0x0000;
    ///大家要知道这里所定义的各个变量的含义,add是4个通道的地址（00，01，10，11）
    ///                                     RNG是输出范围的倍数，可以是0或1。
    ///                                     VOL是0~256数据
    
     data = ((add<<14) | (rng<<13) | (vol<<5));
     //注意这里的有效数据是11位，SPI初始化中也进行了定义
 
    while(SpiaRegs.SPISTS.bit.BUFFULL_FLAG ==1);			//判断SPI的发送缓冲区是否是空的,等于0可写数据
     
       SpiaRegs.SPITXBUF = data;	//把发送的数据写如SPI发送缓冲区

    while( SpiaRegs.SPISTS.bit.BUFFULL_FLAG==1);		//当发送缓冲区出现满标志位时,开始琐存数据
    	 
	delay(1500);//同通过一负跳变琐存要发送的数据,看TLV5620数据手册即可得知
    ClrLOAD;
    
	delay(150);
    SetLOAD;
    
    delay(1500);	
}

void delay(unsigned int t)
{
 
 	while(t>0)
    	t--;
}
//初始化SPI函数
void spi_init()
{    
	SpiaRegs.SPICCR.all =0x0a;///进入初始状态，数据在上升沿输出，自测禁止，11位数据模式
	                            
	SpiaRegs.SPICTL.all =0x0006; // 使能主机模式，正常相位，使能主机发送，禁止接收
	                            //溢出中断，禁止SPI中断；
                                   
	SpiaRegs.SPIBRR =0x0031;	//SPI波特率=37.5M/50	=0.75MHZ；							
    SpiaRegs.SPICCR.all =0x8a; //退出初始状态； 
    SpiaRegs.SPIPRI.bit.FREE = 1;  // 自由运行     
}






//===========================================================================
// No more.
//===========================================================================
